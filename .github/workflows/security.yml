name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: mbstring, dom, fileinfo, mysql, pdo_mysql, bcmath, gd, zip, intl, redis, soap, xsl, gmp, exif, pcntl, sockets

    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Run Enlightn Security Checker
      run: |
        composer require --dev enlightn/security-checker --no-interaction
        ./vendor/bin/security-checker security:check

    - name: Run PHPStan Security Rules
      run: |
        composer require --dev phpstan/phpstan --no-interaction
        composer require --dev phpstan/phpstan-strict-rules --no-interaction
        ./vendor/bin/phpstan analyse --memory-limit=2G --level=max

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        languages: php

    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

    - name: Run Laravel Security Audit
      run: |
        # Check for common Laravel security issues
        echo "Checking for common security issues..."
        
        # Check if APP_DEBUG is disabled in production
        if grep -r "APP_DEBUG=true" .env* 2>/dev/null; then
          echo "⚠️  WARNING: APP_DEBUG is enabled"
        fi
        
        # Check for exposed sensitive files
        if [ -f ".env" ]; then
          echo "⚠️  WARNING: .env file is present in repository"
        fi
        
        # Check for proper .gitignore
        if ! grep -q "\.env" .gitignore; then
          echo "⚠️  WARNING: .env not found in .gitignore"
        fi
        
        # Check for Laravel security headers
        if ! grep -q "X-Frame-Options" app/Http/Middleware/TrustProxies.php 2>/dev/null; then
          echo "ℹ️  INFO: Consider adding security headers middleware"
        fi

    - name: Generate security report
      run: |
        echo "# Security Scan Report" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        echo "## Scan Results" >> security-report.md
        echo "- ✅ Enlightn Security Checker: Completed" >> security-report.md
        echo "- ✅ PHPStan Security Analysis: Completed" >> security-report.md
        echo "- ✅ Trivy Vulnerability Scan: Completed" >> security-report.md
        echo "- ✅ CodeQL Analysis: Completed" >> security-report.md
        echo "- ✅ Secrets Detection: Completed" >> security-report.md
        echo "" >> security-report.md
        echo "## Recommendations" >> security-report.md
        echo "1. Ensure APP_DEBUG=false in production" >> security-report.md
        echo "2. Keep dependencies updated regularly" >> security-report.md
        echo "3. Review and address any security warnings" >> security-report.md
        echo "4. Implement proper security headers" >> security-report.md
        echo "5. Regular security audits and penetration testing" >> security-report.md

    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.md
        retention-days: 30
